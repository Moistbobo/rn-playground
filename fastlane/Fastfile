
artifactDir = ENV["ARTIFACT_OUTPUT_DIR"]
androidDir = ENV["ANDROID_DIR"]
testFairyAPIKey = ENV["TESTFAIRY_API_KEY"]
firebaseAndroidAppId = ENV["FIREBASE_ANDROID_APP_ID"]
firebaseCliToken = ENV["FIREBASE_CLI_TOKEN"]
serviceCredentials = ENV["FIREBASE_APP_SERVICE_CREDENTIALS_JSON"]

# Lane that uploads an apk or ipa to testfairy
lane :toTestFairy do |values|
    apk = values[:apk]
    ipa = values[:ipa]

    if(!testFairyAPIKey)
        UI.error("No TESTFAIRY_API_KEY found in .env. Aborting.")
        next
    end

    # testfairy only supports apk for android
    if(apk)
        testfairy(
            api_key: testFairyAPIKey,
            apk: apk
        )
    end

    if(ipa)
        testfairy(
            api_key: testFairyAPIKey,
            ipa: ipa
        )
    end
end

platform :android do

    lane :build do |values|
       task = values[:task]
       buildType = values[:buildType]
       flavor = values[:flavor]
       copy = values[:copy]
       toPlayStore = values[:toPlayStore]
       toTestFairy = values[:toTestFairy]
       toFirebase = values[:toFirebase]

       gradle(
           project_dir: androidDir,
           task: "clean"
       )

       gradle(
           project_dir: androidDir,
           task: task,
           build_type: buildType,
           flavor: flavor
       )

        artifacts = []

        apkPaths = []
        aabPaths = []

        apkPaths << lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH] if lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
        aabPaths << lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH] if lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH]

        artifacts += apkPaths
        artifacts += aabPaths

        UI.message("artifacts to be copied")
        UI.message(artifacts);

        if (copy)
            copy_artifacts(
                artifacts: artifacts,
                target_path: artifactDir,
                fail_on_missing: false
            )
        end

        if(toPlayStore)
            supply(
                aab_paths: lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH],
                skip_upload_metadata: true,
                skip_upload_changelogs: true,
                skip_upload_images: true,
                skip_upload_screenshots: true,
                track: 'internal',
                release_status: 'draft'
            )
        end

        if(toTestFairy)
            toTestFairy(apk: apkPaths[0])
        end

        if(toFirebase)
            firebase_app_distribution(
                app: firebaseAndroidAppId,
                firebase_cli_token: firebaseCliToken,
                #service_credentials_file: serviceCredentials,
                #android_artifact_path: "/Users/kevinpangappit/Projects/rn-playground/android/app/build/outputs/apk/production/release/app-production-release.apk"
            )
        end

    end
end
